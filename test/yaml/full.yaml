name: ${{ .Parameters.name }}
version: ${{ .Parameters.version }}
application:
  name: ${{ .Parameters.name }}
  partOf: ""
  version: ${{ .Parameters.version }}
links:
  - name: FakeURL
    url: http://${{ .Parameters.name }}.fake
  - name: Google
    url: http://www.google.com
triggers:
  - web:
      name: grafana-trigger
  - manual:
      name: user-trigger
      users:
        - "Adam Page"
strategy:
  - name: approve-install
    condition: always()
    approval:
      users: 
        - 'Adam Page'
  - name: approve-install-admin
    condition: any()
    approval:
      roles:
        - Admin
  - name: deploy-grafana
    condition: succeeded(approve-install)
    helm:
      name: grafana
      cluster: test
      namespace: default
      command: install
      chart: 
        name: grafana
        repo: bitnami
        version: '4.2.5'
      options:
        wait: true
      values:
        library:
          chart: grafana
          repo: bitnami
          version: '4.2.5'
          file: values-production.yaml
        raw:
          ingress:
            enabled: true
            hostName: localhost
            path: "/"
  - name: upgrade-grafana
    hold: 10s
    condition: succeeded()
    helm:
      selector:
        app.kubernetes.io/name: grafana
      cluster: test
      namespace: default
      command: upgrade
      chart: 
        name: grafana
        repo: bitnami
        version: '4.2.5'
      options:
        wait: true
  - name: rollback-grafana
    hold: 1m
    condition: succeeded()
    helm:
      name: grafana
      selector:
        app.kubernetes.io/name: thisgetsoverridenanyways
      cluster: test
      namespace: default
      command: rollback
      chart: 
        name: grafana
        repo: bitnami
        version: '4.2.5'
      options:
        wait: true
  - name: uninstall-grafana
    condition: succeeded()
    helm:
      name: grafana
      cluster: test
      namespace: default
      command: uninstall
      options:
        wait: true
  - name: upgrade-install-grafana-fail
    condition: succeeded()
    helm:
      name: grafana
      cluster: test
      namespace: default
      command: upgrade
      chart: 
        name: grafana
        repo: bitnami
        version: '4.2.5'
      options:
        wait: true
        install: false
  - name: upgrade-install-grafana-succeed
    condition: failed(update-install-grafana-fail)
    helm:
      name: grafana
      cluster: test
      namespace: default
      command: upgrade
      chart: 
        name: grafana
        repo: bitnami
        version: '4.2.5'
      options:
        wait: true
        install: true
  - name: trigger-another-deployment
    condition: any()
    trigger:
      name: deploy-trigger
      deployment: simple
      arguments:
        version: ${{ .Parameters.version }}
