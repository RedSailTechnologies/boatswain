/*
Poseidon is the service concerned with managing helm repos and charts.
The api can be hit at /api/redsail.bosn.Poseidon/<Method>.
*/
syntax = "proto3";
package redsail.bosn;
option go_package = "github.com/redsailtechnologies/boatswain/pkg/poseidon";

service Poseidon {
    // gets all the charts for this repository
    rpc Charts (Repo) returns (ChartsResponse);

    // downloads the chart
    rpc DownloadChart (DownloadRequest) returns (File);

    // add a repo
    rpc AddRepo (Repo) returns (EmptyResponse);

    // delete a repo
    rpc DeleteRepo (Repo) returns (EmptyResponse);

    // Edit a repo
    rpc EditRepo (Repo) returns (EmptyResponse);

    // gets all the currently configured repositories
    rpc Repos (ReposRequest) returns (ReposResponse);
}

message Chart {
    string name = 1; // the chart name
    repeated ChartVersion versions = 2; // the versions available for this chart
}

message ChartVersion {
    string name = 1; // the name of the chart
    string chart_version = 2; // the chart version
    string app_version = 3; // the chart's default app version
    string description = 4; // description of the chart
    string url = 5; // the url for this specific version of the chart
}

message ChartsResponse {
    repeated Chart charts = 1; // the list of charts
}

message DownloadRequest {
    string chart_name = 1; // the name of the chart to download
    string chart_version = 2; // the version to download
    string repo_name = 3; // the repo to download the chart from
}

message File {
    string name = 1; // the filename
    bytes contents = 2; // the contents of that file
}

message Repo {
    string uuid = 1; // the unique id of the repo
    string name = 2; // name of the repo
    string endpoint = 3; // the endpoint for the repo
    bool ready = 4; // if the repo is ready (checking by getting index.yaml)
}

message ReposRequest {}

message ReposResponse {
    repeated Repo repos = 1; // the list of currently configured repositories
}

message EmptyResponse {}