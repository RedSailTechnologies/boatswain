/*
Cluster is the service managing external clusters.
*/
syntax = "proto3";
package redsail.bosn;
option go_package = "github.com/redsailtechnologies/boatswain/rpc/cluster;cluster";

service Cluster {
    // adds a cluster to the list of configurations
    rpc Create (CreateCluster) returns (ClusterCreated);
    
    // edits an already existing cluster
    rpc Update (UpdateCluster) returns (ClusterUpdated);
    
    // removes a cluster from the list of configurations
    rpc Destroy (DestroyCluster) returns (ClusterDestroyed);

    // reads out a cluster
    rpc Read (ReadCluster) returns (ClusterRead);

    // finds the cluster uuid by name
    rpc Find (FindCluster) returns (ClusterFound);
    
    // gets all clusters currently configured and their status
    rpc All (ReadClusters) returns (ClustersRead);

    // gets the cluster's access token
    rpc Token (ReadToken) returns (TokenRead);
}

message CreateCluster {
    string name = 1; // name of the cluster
}

message ClusterCreated {
    string uuid = 1; // the uuid of the cluster, used when setting up the agent
}

message UpdateCluster {
    string uuid = 1; // unique id of the cluster
    string name = 2; // name of the cluster
}

message ClusterUpdated {}

message DestroyCluster {
    string uuid = 1; // unique id of the cluster
}

message ClusterDestroyed {}

message ReadCluster {
    string uuid = 1; // unique id of the cluster
}

message ClusterRead {
    string uuid = 1; // unique id of the cluster
    string name = 2; // name of the cluster
    bool ready = 3; // server ready status, based on agent status
}

message FindCluster {
    string name = 1; // the name of the cluster to search for
}

message ClusterFound {
    string uuid = 1; //unique id of the cluster found
}

message ReadClusters {}

message ClustersRead {
    repeated ClusterRead clusters = 1; // clusters read
}

message ReadToken {
    string uuid = 1; //unique id of the cluster
}

message TokenRead {
    string token = 1; // the token for this cluster
}