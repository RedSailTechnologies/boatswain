/*
Template is the service for dealing with yaml templates.
*/
syntax = "proto3";
package redsail.bosn;
option go_package = "github.com/redsailtechnologies/boatswain/rpc/template";

service Template {
    // adds a template
    rpc Create (CreateTemplate) returns (TemplateCreated);

    // edits an existing template
    rpc Update (UpdateTemplate) returns (TemplateUpdated);

    // removes a template
    rpc Destroy (DestroyTemplate) returns (TemplateDestroyed);

    // reads a template
    rpc Read (ReadTemplate) returns (TemplateRead);

    // gets all templates
    rpc All (ReadTemplates) returns (TemplatesRead);
}

message CreateTemplate {
    string name = 1; // name of the template
    TemplateType type = 2; // the type of the template
    string yaml = 3; // the template
}

message TemplateCreated {}

message UpdateTemplate {
    string uuid = 1; // unique id of the template
    string name = 2; // name of the template
    TemplateType type = 3; // the type of the template
    string yaml = 4; // the template
}

message TemplateUpdated {}

message DestroyTemplate {
    string uuid = 1; // unique id of the template
}

message TemplateDestroyed {}

message ReadTemplate {
    string uuid = 1; //unique id of the template
}

message TemplateRead {
    string uuid = 1; // unique id of the template
    string name = 2; // name of the template
    TemplateType type = 3; // the type of the template
    string yaml = 4; // the template
}

message ReadTemplates {}

message TemplatesRead {
    repeated TemplateRead templates = 1; // templates read
}

enum TemplateType {
    DEPLOYMENT = 0;
    STEP = 1;
    TRIGGER = 2;
}