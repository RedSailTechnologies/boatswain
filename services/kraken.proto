/*
Kraken is the service managing external cluster connections.
The api can be hit at /api/redsail.bosn.Kraken/<Method>.
*/
syntax = "proto3";
package redsail.bosn;
option go_package = "github.com/redsailtechnologies/boatswain/pkg/kraken";

service Kraken {
    // gets all clusters currently configured and their status
    rpc Clusters (ClustersRequest) returns (ClustersResponse);
    
    // gets the status for a single cluster
    rpc ClusterStatus (Cluster) returns (Cluster);

    // gets all applications for the clusters passed
    rpc Releases (ReleaseRequest) returns (ReleaseResponse);

    // gets the status for a single application in a single cluster
    rpc ReleaseStatus (Release) returns (Release);

    // upgrades the release with the given parameters
    rpc UpgradeRelease(UpgradeReleaseRequest) returns (Release);
}

message Cluster {
    string name = 1; // name of the cluster
    string endpoint = 2; // the cluster's api server
    bool ready = 3; // if the cluster is ready (checking each node for Ready status)
}

message ClustersRequest {}

message ClustersResponse {
    repeated Cluster clusters = 1; // the list of clusters
}

message Release {
    string name = 1; // the name of this release
    string chart = 2; // the chart this release deploys
    string namespace = 3; // the namespace for this release
    string chart_version = 4; // the chart version for this release
    string app_version = 5; // the app version for this release
    string cluster_name = 6; // the cluster this release applies to
    string status = 7; // the (helm) status of this release
}

message Releases {
    string name = 1; // the name of these releases
    string chart = 2; // the chart these releases deploy
    repeated Release releases = 3; // the releases
}

message ReleaseRequest {
    repeated Cluster clusters = 1; // the clusters to get apps for
}

message ReleaseResponse {
    repeated Releases release_lists = 1; // the list of releases for the cluster
}

message UpgradeReleaseRequest {
    string name = 1;
    string chart = 2;
    string namespace = 3;
    string chart_version = 4;
    string app_version = 5;
    string cluster_name = 6;
    string repo_name = 7;
    string values = 8;
}

// the helm status of the release
enum Status {
    unknown = 0;
    deployed = 1;
    uninstalled = 2;
    superseded = 3;
    failed = 4;
    uninstalling = 5;
    pending_install = 6;
    pending_upgrade = 7;
    pending_rollback = 8;
}