//
//Template is the service for dealing with yaml templates.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: template.proto

package template

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TemplateType int32

const (
	TemplateType_DEPLOYMENT TemplateType = 0
	TemplateType_STEP       TemplateType = 1
	TemplateType_TRIGGER    TemplateType = 2
)

// Enum value maps for TemplateType.
var (
	TemplateType_name = map[int32]string{
		0: "DEPLOYMENT",
		1: "STEP",
		2: "TRIGGER",
	}
	TemplateType_value = map[string]int32{
		"DEPLOYMENT": 0,
		"STEP":       1,
		"TRIGGER":    2,
	}
)

func (x TemplateType) Enum() *TemplateType {
	p := new(TemplateType)
	*p = x
	return p
}

func (x TemplateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TemplateType) Descriptor() protoreflect.EnumDescriptor {
	return file_template_proto_enumTypes[0].Descriptor()
}

func (TemplateType) Type() protoreflect.EnumType {
	return &file_template_proto_enumTypes[0]
}

func (x TemplateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TemplateType.Descriptor instead.
func (TemplateType) EnumDescriptor() ([]byte, []int) {
	return file_template_proto_rawDescGZIP(), []int{0}
}

type CreateTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                 // name of the template
	Type TemplateType `protobuf:"varint,2,opt,name=type,proto3,enum=redsail.bosn.TemplateType" json:"type,omitempty"` // the type of the template
	Yaml string       `protobuf:"bytes,3,opt,name=yaml,proto3" json:"yaml,omitempty"`                                 // the template
}

func (x *CreateTemplate) Reset() {
	*x = CreateTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_template_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplate) ProtoMessage() {}

func (x *CreateTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_template_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplate.ProtoReflect.Descriptor instead.
func (*CreateTemplate) Descriptor() ([]byte, []int) {
	return file_template_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTemplate) GetType() TemplateType {
	if x != nil {
		return x.Type
	}
	return TemplateType_DEPLOYMENT
}

func (x *CreateTemplate) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type TemplateCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TemplateCreated) Reset() {
	*x = TemplateCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_template_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateCreated) ProtoMessage() {}

func (x *TemplateCreated) ProtoReflect() protoreflect.Message {
	mi := &file_template_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateCreated.ProtoReflect.Descriptor instead.
func (*TemplateCreated) Descriptor() ([]byte, []int) {
	return file_template_proto_rawDescGZIP(), []int{1}
}

type UpdateTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string       `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                                 // unique id of the template
	Name string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                 // name of the template
	Type TemplateType `protobuf:"varint,3,opt,name=type,proto3,enum=redsail.bosn.TemplateType" json:"type,omitempty"` // the type of the template
	Yaml string       `protobuf:"bytes,4,opt,name=yaml,proto3" json:"yaml,omitempty"`                                 // the template
}

func (x *UpdateTemplate) Reset() {
	*x = UpdateTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_template_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplate) ProtoMessage() {}

func (x *UpdateTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_template_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplate.ProtoReflect.Descriptor instead.
func (*UpdateTemplate) Descriptor() ([]byte, []int) {
	return file_template_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTemplate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTemplate) GetType() TemplateType {
	if x != nil {
		return x.Type
	}
	return TemplateType_DEPLOYMENT
}

func (x *UpdateTemplate) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type TemplateUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TemplateUpdated) Reset() {
	*x = TemplateUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_template_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateUpdated) ProtoMessage() {}

func (x *TemplateUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_template_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateUpdated.ProtoReflect.Descriptor instead.
func (*TemplateUpdated) Descriptor() ([]byte, []int) {
	return file_template_proto_rawDescGZIP(), []int{3}
}

type DestroyTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // unique id of the template
}

func (x *DestroyTemplate) Reset() {
	*x = DestroyTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_template_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyTemplate) ProtoMessage() {}

func (x *DestroyTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_template_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyTemplate.ProtoReflect.Descriptor instead.
func (*DestroyTemplate) Descriptor() ([]byte, []int) {
	return file_template_proto_rawDescGZIP(), []int{4}
}

func (x *DestroyTemplate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type TemplateDestroyed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TemplateDestroyed) Reset() {
	*x = TemplateDestroyed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_template_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateDestroyed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateDestroyed) ProtoMessage() {}

func (x *TemplateDestroyed) ProtoReflect() protoreflect.Message {
	mi := &file_template_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateDestroyed.ProtoReflect.Descriptor instead.
func (*TemplateDestroyed) Descriptor() ([]byte, []int) {
	return file_template_proto_rawDescGZIP(), []int{5}
}

type ReadTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` //unique id of the template
}

func (x *ReadTemplate) Reset() {
	*x = ReadTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_template_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTemplate) ProtoMessage() {}

func (x *ReadTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_template_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadTemplate.ProtoReflect.Descriptor instead.
func (*ReadTemplate) Descriptor() ([]byte, []int) {
	return file_template_proto_rawDescGZIP(), []int{6}
}

func (x *ReadTemplate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type TemplateRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string       `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                                 // unique id of the template
	Name string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                 // name of the template
	Type TemplateType `protobuf:"varint,3,opt,name=type,proto3,enum=redsail.bosn.TemplateType" json:"type,omitempty"` // the type of the template
	Yaml string       `protobuf:"bytes,4,opt,name=yaml,proto3" json:"yaml,omitempty"`                                 // the template
}

func (x *TemplateRead) Reset() {
	*x = TemplateRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_template_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRead) ProtoMessage() {}

func (x *TemplateRead) ProtoReflect() protoreflect.Message {
	mi := &file_template_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRead.ProtoReflect.Descriptor instead.
func (*TemplateRead) Descriptor() ([]byte, []int) {
	return file_template_proto_rawDescGZIP(), []int{7}
}

func (x *TemplateRead) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *TemplateRead) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TemplateRead) GetType() TemplateType {
	if x != nil {
		return x.Type
	}
	return TemplateType_DEPLOYMENT
}

func (x *TemplateRead) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type ReadTemplates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadTemplates) Reset() {
	*x = ReadTemplates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_template_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadTemplates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTemplates) ProtoMessage() {}

func (x *ReadTemplates) ProtoReflect() protoreflect.Message {
	mi := &file_template_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadTemplates.ProtoReflect.Descriptor instead.
func (*ReadTemplates) Descriptor() ([]byte, []int) {
	return file_template_proto_rawDescGZIP(), []int{8}
}

type TemplatesRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Templates []*TemplateRead `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"` // templates read
}

func (x *TemplatesRead) Reset() {
	*x = TemplatesRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_template_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplatesRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplatesRead) ProtoMessage() {}

func (x *TemplatesRead) ProtoReflect() protoreflect.Message {
	mi := &file_template_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplatesRead.ProtoReflect.Descriptor instead.
func (*TemplatesRead) Descriptor() ([]byte, []int) {
	return file_template_proto_rawDescGZIP(), []int{9}
}

func (x *TemplatesRead) GetTemplates() []*TemplateRead {
	if x != nil {
		return x.Templates
	}
	return nil
}

var File_template_proto protoreflect.FileDescriptor

var file_template_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x22, 0x68,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73,
	0x6e, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x11, 0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x7c, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f,
	0x73, 0x6e, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x11, 0x0a, 0x0f, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x25, 0x0a, 0x0f,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x65, 0x64, 0x22, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x7a, 0x0a, 0x0c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73,
	0x6e, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x0d, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x2a, 0x35, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x54, 0x45, 0x50, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x10, 0x02, 0x32, 0xe4, 0x02, 0x0a, 0x08,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73,
	0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x45, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x64, 0x73,
	0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69,
	0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x12, 0x1d, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e,
	0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x65,
	0x64, 0x12, 0x3e, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x2e, 0x72, 0x65, 0x64, 0x73,
	0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e,
	0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x3f, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61,
	0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e,
	0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f,
	0x67, 0x69, 0x65, 0x73, 0x2f, 0x62, 0x6f, 0x61, 0x74, 0x73, 0x77, 0x61, 0x69, 0x6e, 0x2f, 0x72,
	0x70, 0x63, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_template_proto_rawDescOnce sync.Once
	file_template_proto_rawDescData = file_template_proto_rawDesc
)

func file_template_proto_rawDescGZIP() []byte {
	file_template_proto_rawDescOnce.Do(func() {
		file_template_proto_rawDescData = protoimpl.X.CompressGZIP(file_template_proto_rawDescData)
	})
	return file_template_proto_rawDescData
}

var file_template_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_template_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_template_proto_goTypes = []interface{}{
	(TemplateType)(0),         // 0: redsail.bosn.TemplateType
	(*CreateTemplate)(nil),    // 1: redsail.bosn.CreateTemplate
	(*TemplateCreated)(nil),   // 2: redsail.bosn.TemplateCreated
	(*UpdateTemplate)(nil),    // 3: redsail.bosn.UpdateTemplate
	(*TemplateUpdated)(nil),   // 4: redsail.bosn.TemplateUpdated
	(*DestroyTemplate)(nil),   // 5: redsail.bosn.DestroyTemplate
	(*TemplateDestroyed)(nil), // 6: redsail.bosn.TemplateDestroyed
	(*ReadTemplate)(nil),      // 7: redsail.bosn.ReadTemplate
	(*TemplateRead)(nil),      // 8: redsail.bosn.TemplateRead
	(*ReadTemplates)(nil),     // 9: redsail.bosn.ReadTemplates
	(*TemplatesRead)(nil),     // 10: redsail.bosn.TemplatesRead
}
var file_template_proto_depIdxs = []int32{
	0,  // 0: redsail.bosn.CreateTemplate.type:type_name -> redsail.bosn.TemplateType
	0,  // 1: redsail.bosn.UpdateTemplate.type:type_name -> redsail.bosn.TemplateType
	0,  // 2: redsail.bosn.TemplateRead.type:type_name -> redsail.bosn.TemplateType
	8,  // 3: redsail.bosn.TemplatesRead.templates:type_name -> redsail.bosn.TemplateRead
	1,  // 4: redsail.bosn.Template.Create:input_type -> redsail.bosn.CreateTemplate
	3,  // 5: redsail.bosn.Template.Update:input_type -> redsail.bosn.UpdateTemplate
	5,  // 6: redsail.bosn.Template.Destroy:input_type -> redsail.bosn.DestroyTemplate
	7,  // 7: redsail.bosn.Template.Read:input_type -> redsail.bosn.ReadTemplate
	9,  // 8: redsail.bosn.Template.All:input_type -> redsail.bosn.ReadTemplates
	2,  // 9: redsail.bosn.Template.Create:output_type -> redsail.bosn.TemplateCreated
	4,  // 10: redsail.bosn.Template.Update:output_type -> redsail.bosn.TemplateUpdated
	6,  // 11: redsail.bosn.Template.Destroy:output_type -> redsail.bosn.TemplateDestroyed
	8,  // 12: redsail.bosn.Template.Read:output_type -> redsail.bosn.TemplateRead
	10, // 13: redsail.bosn.Template.All:output_type -> redsail.bosn.TemplatesRead
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_template_proto_init() }
func file_template_proto_init() {
	if File_template_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_template_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_template_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_template_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_template_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_template_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_template_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateDestroyed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_template_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_template_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_template_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadTemplates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_template_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplatesRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_template_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_template_proto_goTypes,
		DependencyIndexes: file_template_proto_depIdxs,
		EnumInfos:         file_template_proto_enumTypes,
		MessageInfos:      file_template_proto_msgTypes,
	}.Build()
	File_template_proto = out.File
	file_template_proto_rawDesc = nil
	file_template_proto_goTypes = nil
	file_template_proto_depIdxs = nil
}
