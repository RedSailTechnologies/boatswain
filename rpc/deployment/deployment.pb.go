//
//Deployment is the service for creation and management of application installs/upgrades.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: deployment.proto

package deployment

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LogLevel int32

const (
	LogLevel_DEBUG LogLevel = 0
	LogLevel_INFO  LogLevel = 1
	LogLevel_WARN  LogLevel = 2
	LogLevel_ERROR LogLevel = 3
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "DEBUG",
		1: "INFO",
		2: "WARN",
		3: "ERROR",
	}
	LogLevel_value = map[string]int32{
		"DEBUG": 0,
		"INFO":  1,
		"WARN":  2,
		"ERROR": 3,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_deployment_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_deployment_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_NOT_STARTED Status = 0
	Status_IN_PROGRESS Status = 1
	Status_FAILED      Status = 2
	Status_SUCCEEDED   Status = 3
	Status_SKIPPED     Status = 4
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "NOT_STARTED",
		1: "IN_PROGRESS",
		2: "FAILED",
		3: "SUCCEEDED",
		4: "SKIPPED",
	}
	Status_value = map[string]int32{
		"NOT_STARTED": 0,
		"IN_PROGRESS": 1,
		"FAILED":      2,
		"SUCCEEDED":   3,
		"SKIPPED":     4,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_deployment_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_deployment_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{1}
}

type CreateDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                         // the name of this deployment
	RepoId   string `protobuf:"bytes,2,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`       // the unique id of the repo to get the deployment yaml from
	Branch   string `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`                     // the branch from the repo to get the file from
	FilePath string `protobuf:"bytes,4,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"` // the path to the deployment file
}

func (x *CreateDeployment) Reset() {
	*x = CreateDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeployment) ProtoMessage() {}

func (x *CreateDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeployment.ProtoReflect.Descriptor instead.
func (*CreateDeployment) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDeployment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDeployment) GetRepoId() string {
	if x != nil {
		return x.RepoId
	}
	return ""
}

func (x *CreateDeployment) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *CreateDeployment) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type DeploymentCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeploymentCreated) Reset() {
	*x = DeploymentCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentCreated) ProtoMessage() {}

func (x *DeploymentCreated) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentCreated.ProtoReflect.Descriptor instead.
func (*DeploymentCreated) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{1}
}

type UpdateDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                         // unique id of the deployment
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                         // the name of this deployment
	RepoId   string `protobuf:"bytes,3,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`       // the unique id of the repo to get the deployment yaml from
	Branch   string `protobuf:"bytes,4,opt,name=branch,proto3" json:"branch,omitempty"`                     // the branch from the repo to get the file from
	FilePath string `protobuf:"bytes,5,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"` // the path to the deployment file
}

func (x *UpdateDeployment) Reset() {
	*x = UpdateDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeployment) ProtoMessage() {}

func (x *UpdateDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeployment.ProtoReflect.Descriptor instead.
func (*UpdateDeployment) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDeployment) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateDeployment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDeployment) GetRepoId() string {
	if x != nil {
		return x.RepoId
	}
	return ""
}

func (x *UpdateDeployment) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *UpdateDeployment) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type DeploymentUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeploymentUpdated) Reset() {
	*x = DeploymentUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentUpdated) ProtoMessage() {}

func (x *DeploymentUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentUpdated.ProtoReflect.Descriptor instead.
func (*DeploymentUpdated) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{3}
}

type DestroyDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // unique id of the deployment
}

func (x *DestroyDeployment) Reset() {
	*x = DestroyDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyDeployment) ProtoMessage() {}

func (x *DestroyDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyDeployment.ProtoReflect.Descriptor instead.
func (*DestroyDeployment) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{4}
}

func (x *DestroyDeployment) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type DeploymentDestroyed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeploymentDestroyed) Reset() {
	*x = DeploymentDestroyed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentDestroyed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentDestroyed) ProtoMessage() {}

func (x *DeploymentDestroyed) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentDestroyed.ProtoReflect.Descriptor instead.
func (*DeploymentDestroyed) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{5}
}

type ReadDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // unique id of the deployment
}

func (x *ReadDeployment) Reset() {
	*x = ReadDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeployment) ProtoMessage() {}

func (x *ReadDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeployment.ProtoReflect.Descriptor instead.
func (*ReadDeployment) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{6}
}

func (x *ReadDeployment) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type DeploymentRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                         // unique id of the deployment
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                         // the name of this deployment
	RepoId   string `protobuf:"bytes,3,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`       // the unique id of the repo to get the deployment yaml from
	RepoName string `protobuf:"bytes,4,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"` // the name of the repo
	Branch   string `protobuf:"bytes,5,opt,name=branch,proto3" json:"branch,omitempty"`                     // the branch from the repo to get the file from
	FilePath string `protobuf:"bytes,6,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"` // the path to the deployment file
}

func (x *DeploymentRead) Reset() {
	*x = DeploymentRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentRead) ProtoMessage() {}

func (x *DeploymentRead) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentRead.ProtoReflect.Descriptor instead.
func (*DeploymentRead) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{7}
}

func (x *DeploymentRead) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DeploymentRead) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeploymentRead) GetRepoId() string {
	if x != nil {
		return x.RepoId
	}
	return ""
}

func (x *DeploymentRead) GetRepoName() string {
	if x != nil {
		return x.RepoName
	}
	return ""
}

func (x *DeploymentRead) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *DeploymentRead) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type ReadDeployments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadDeployments) Reset() {
	*x = ReadDeployments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDeployments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeployments) ProtoMessage() {}

func (x *ReadDeployments) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeployments.ProtoReflect.Descriptor instead.
func (*ReadDeployments) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{8}
}

type DeploymentReadSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // unique id of the deployment
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // the name of this deployment
}

func (x *DeploymentReadSummary) Reset() {
	*x = DeploymentReadSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentReadSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentReadSummary) ProtoMessage() {}

func (x *DeploymentReadSummary) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentReadSummary.ProtoReflect.Descriptor instead.
func (*DeploymentReadSummary) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{9}
}

func (x *DeploymentReadSummary) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DeploymentReadSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeploymentsRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployments []*DeploymentReadSummary `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"` // the list of deployments
}

func (x *DeploymentsRead) Reset() {
	*x = DeploymentsRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentsRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentsRead) ProtoMessage() {}

func (x *DeploymentsRead) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentsRead.ProtoReflect.Descriptor instead.
func (*DeploymentsRead) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{10}
}

func (x *DeploymentsRead) GetDeployments() []*DeploymentReadSummary {
	if x != nil {
		return x.Deployments
	}
	return nil
}

type TemplateDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // unique id of the deployment
}

func (x *TemplateDeployment) Reset() {
	*x = TemplateDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateDeployment) ProtoMessage() {}

func (x *TemplateDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateDeployment.ProtoReflect.Descriptor instead.
func (*TemplateDeployment) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{11}
}

func (x *TemplateDeployment) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type DeploymentTemplated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // unique id of the deployment
	Yaml string `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"` // the templated yaml for this deployment
}

func (x *DeploymentTemplated) Reset() {
	*x = DeploymentTemplated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentTemplated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentTemplated) ProtoMessage() {}

func (x *DeploymentTemplated) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentTemplated.ProtoReflect.Descriptor instead.
func (*DeploymentTemplated) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{12}
}

func (x *DeploymentTemplated) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DeploymentTemplated) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type ReadToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // unique id of the deployment
}

func (x *ReadToken) Reset() {
	*x = ReadToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadToken) ProtoMessage() {}

func (x *ReadToken) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadToken.ProtoReflect.Descriptor instead.
func (*ReadToken) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{13}
}

func (x *ReadToken) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type TokenRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // deployment token for web calls
}

func (x *TokenRead) Reset() {
	*x = TokenRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRead) ProtoMessage() {}

func (x *TokenRead) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRead.ProtoReflect.Descriptor instead.
func (*TokenRead) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{14}
}

func (x *TokenRead) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ReadRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentUuid string `protobuf:"bytes,1,opt,name=deployment_uuid,json=deploymentUuid,proto3" json:"deployment_uuid,omitempty"` // unique id of the run
}

func (x *ReadRun) Reset() {
	*x = ReadRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRun) ProtoMessage() {}

func (x *ReadRun) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRun.ProtoReflect.Descriptor instead.
func (*ReadRun) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{15}
}

func (x *ReadRun) GetDeploymentUuid() string {
	if x != nil {
		return x.DeploymentUuid
	}
	return ""
}

type StepLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Level     LogLevel `protobuf:"varint,2,opt,name=level,proto3,enum=redsail.bosn.LogLevel" json:"level,omitempty"`
	Message   string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StepLog) Reset() {
	*x = StepLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StepLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepLog) ProtoMessage() {}

func (x *StepLog) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepLog.ProtoReflect.Descriptor instead.
func (*StepLog) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{16}
}

func (x *StepLog) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StepLog) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_DEBUG
}

func (x *StepLog) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StepRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status    Status     `protobuf:"varint,2,opt,name=status,proto3,enum=redsail.bosn.Status" json:"status,omitempty"`
	StartTime int64      `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime  int64      `protobuf:"varint,4,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	Logs      []*StepLog `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *StepRead) Reset() {
	*x = StepRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StepRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepRead) ProtoMessage() {}

func (x *StepRead) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepRead.ProtoReflect.Descriptor instead.
func (*StepRead) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{17}
}

func (x *StepRead) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StepRead) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_NOT_STARTED
}

func (x *StepRead) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *StepRead) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *StepRead) GetLogs() []*StepLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type LinkRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *LinkRead) Reset() {
	*x = LinkRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkRead) ProtoMessage() {}

func (x *LinkRead) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkRead.ProtoReflect.Descriptor instead.
func (*LinkRead) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{18}
}

func (x *LinkRead) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LinkRead) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RunRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name      string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version   string      `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Status    Status      `protobuf:"varint,4,opt,name=status,proto3,enum=redsail.bosn.Status" json:"status,omitempty"`
	StartTime int64       `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime  int64       `protobuf:"varint,6,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	Links     []*LinkRead `protobuf:"bytes,7,rep,name=links,proto3" json:"links,omitempty"`
	Steps     []*StepRead `protobuf:"bytes,8,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *RunRead) Reset() {
	*x = RunRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRead) ProtoMessage() {}

func (x *RunRead) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRead.ProtoReflect.Descriptor instead.
func (*RunRead) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{19}
}

func (x *RunRead) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RunRead) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunRead) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RunRead) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_NOT_STARTED
}

func (x *RunRead) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RunRead) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *RunRead) GetLinks() []*LinkRead {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *RunRead) GetSteps() []*StepRead {
	if x != nil {
		return x.Steps
	}
	return nil
}

type ReadRuns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentUuid string `protobuf:"bytes,1,opt,name=deployment_uuid,json=deploymentUuid,proto3" json:"deployment_uuid,omitempty"` // unique id of the deployment to get runs for
}

func (x *ReadRuns) Reset() {
	*x = ReadRuns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRuns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRuns) ProtoMessage() {}

func (x *ReadRuns) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRuns.ProtoReflect.Descriptor instead.
func (*ReadRuns) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{20}
}

func (x *ReadRuns) GetDeploymentUuid() string {
	if x != nil {
		return x.DeploymentUuid
	}
	return ""
}

type RunReadSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version   string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Status    Status `protobuf:"varint,4,opt,name=status,proto3,enum=redsail.bosn.Status" json:"status,omitempty"`
	StartTime int64  `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime  int64  `protobuf:"varint,6,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
}

func (x *RunReadSummary) Reset() {
	*x = RunReadSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunReadSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunReadSummary) ProtoMessage() {}

func (x *RunReadSummary) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunReadSummary.ProtoReflect.Descriptor instead.
func (*RunReadSummary) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{21}
}

func (x *RunReadSummary) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RunReadSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunReadSummary) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RunReadSummary) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_NOT_STARTED
}

func (x *RunReadSummary) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RunReadSummary) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

type RunsRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Runs []*RunReadSummary `protobuf:"bytes,1,rep,name=runs,proto3" json:"runs,omitempty"` //the runs
}

func (x *RunsRead) Reset() {
	*x = RunsRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunsRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunsRead) ProtoMessage() {}

func (x *RunsRead) ProtoReflect() protoreflect.Message {
	mi := &file_deployment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunsRead.ProtoReflect.Descriptor instead.
func (*RunsRead) Descriptor() ([]byte, []int) {
	return file_deployment_proto_rawDescGZIP(), []int{22}
}

func (x *RunsRead) GetRuns() []*RunReadSummary {
	if x != nil {
		return x.Runs
	}
	return nil
}

var File_deployment_proto protoreflect.FileDescriptor

var file_deployment_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e,
	0x22, 0x74, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x27, 0x0a, 0x11, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x65, 0x64, 0x22, 0x24, 0x0a, 0x0e, 0x52,
	0x65, 0x61, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0xa3, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3f, 0x0a, 0x15, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x0f, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x45,
	0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f,
	0x73, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x3d, 0x0a, 0x13, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61,
	0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x1f,
	0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x21, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x32, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x64, 0x52, 0x75, 0x6e, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0x6f, 0x0a, 0x07, 0x53, 0x74, 0x65, 0x70, 0x4c, 0x6f,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x2c, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x4c, 0x6f,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x08, 0x53, 0x74, 0x65, 0x70,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61,
	0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e,
	0x53, 0x74, 0x65, 0x70, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x30, 0x0a,
	0x08, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0x91, 0x02, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74,
	0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73,
	0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c,
	0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x05,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62,
	0x6f, 0x73, 0x6e, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x61, 0x64, 0x52, 0x05, 0x73, 0x74,
	0x65, 0x70, 0x73, 0x22, 0x33, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x52, 0x75, 0x6e, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x0e, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x61, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74,
	0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73,
	0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e,
	0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x04, 0x72, 0x75, 0x6e, 0x73, 0x2a, 0x34, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x2a, 0x52, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f,
	0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x04, 0x32,
	0xf3, 0x04, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x49,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61,
	0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61,
	0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f,
	0x73, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f,
	0x73, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12,
	0x1f, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x1a, 0x21, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x2e, 0x72, 0x65,
	0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x64, 0x73,
	0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x12, 0x43, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x12, 0x1d,
	0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1d, 0x2e,
	0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x4f, 0x0a, 0x08,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61,
	0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x64,
	0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c,
	0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a,
	0x17, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12,
	0x15, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x75, 0x6e, 0x1a, 0x15, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c,
	0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x12, 0x36, 0x0a,
	0x04, 0x52, 0x75, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e,
	0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x75, 0x6e, 0x73, 0x1a, 0x16, 0x2e,
	0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x2e, 0x62, 0x6f, 0x73, 0x6e, 0x2e, 0x52, 0x75, 0x6e,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x64, 0x73, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73, 0x2f, 0x62, 0x6f, 0x61, 0x74, 0x73, 0x77, 0x61, 0x69,
	0x6e, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x3b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_deployment_proto_rawDescOnce sync.Once
	file_deployment_proto_rawDescData = file_deployment_proto_rawDesc
)

func file_deployment_proto_rawDescGZIP() []byte {
	file_deployment_proto_rawDescOnce.Do(func() {
		file_deployment_proto_rawDescData = protoimpl.X.CompressGZIP(file_deployment_proto_rawDescData)
	})
	return file_deployment_proto_rawDescData
}

var file_deployment_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_deployment_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_deployment_proto_goTypes = []interface{}{
	(LogLevel)(0),                 // 0: redsail.bosn.LogLevel
	(Status)(0),                   // 1: redsail.bosn.Status
	(*CreateDeployment)(nil),      // 2: redsail.bosn.CreateDeployment
	(*DeploymentCreated)(nil),     // 3: redsail.bosn.DeploymentCreated
	(*UpdateDeployment)(nil),      // 4: redsail.bosn.UpdateDeployment
	(*DeploymentUpdated)(nil),     // 5: redsail.bosn.DeploymentUpdated
	(*DestroyDeployment)(nil),     // 6: redsail.bosn.DestroyDeployment
	(*DeploymentDestroyed)(nil),   // 7: redsail.bosn.DeploymentDestroyed
	(*ReadDeployment)(nil),        // 8: redsail.bosn.ReadDeployment
	(*DeploymentRead)(nil),        // 9: redsail.bosn.DeploymentRead
	(*ReadDeployments)(nil),       // 10: redsail.bosn.ReadDeployments
	(*DeploymentReadSummary)(nil), // 11: redsail.bosn.DeploymentReadSummary
	(*DeploymentsRead)(nil),       // 12: redsail.bosn.DeploymentsRead
	(*TemplateDeployment)(nil),    // 13: redsail.bosn.TemplateDeployment
	(*DeploymentTemplated)(nil),   // 14: redsail.bosn.DeploymentTemplated
	(*ReadToken)(nil),             // 15: redsail.bosn.ReadToken
	(*TokenRead)(nil),             // 16: redsail.bosn.TokenRead
	(*ReadRun)(nil),               // 17: redsail.bosn.ReadRun
	(*StepLog)(nil),               // 18: redsail.bosn.StepLog
	(*StepRead)(nil),              // 19: redsail.bosn.StepRead
	(*LinkRead)(nil),              // 20: redsail.bosn.LinkRead
	(*RunRead)(nil),               // 21: redsail.bosn.RunRead
	(*ReadRuns)(nil),              // 22: redsail.bosn.ReadRuns
	(*RunReadSummary)(nil),        // 23: redsail.bosn.RunReadSummary
	(*RunsRead)(nil),              // 24: redsail.bosn.RunsRead
}
var file_deployment_proto_depIdxs = []int32{
	11, // 0: redsail.bosn.DeploymentsRead.deployments:type_name -> redsail.bosn.DeploymentReadSummary
	0,  // 1: redsail.bosn.StepLog.level:type_name -> redsail.bosn.LogLevel
	1,  // 2: redsail.bosn.StepRead.status:type_name -> redsail.bosn.Status
	18, // 3: redsail.bosn.StepRead.logs:type_name -> redsail.bosn.StepLog
	1,  // 4: redsail.bosn.RunRead.status:type_name -> redsail.bosn.Status
	20, // 5: redsail.bosn.RunRead.links:type_name -> redsail.bosn.LinkRead
	19, // 6: redsail.bosn.RunRead.steps:type_name -> redsail.bosn.StepRead
	1,  // 7: redsail.bosn.RunReadSummary.status:type_name -> redsail.bosn.Status
	23, // 8: redsail.bosn.RunsRead.runs:type_name -> redsail.bosn.RunReadSummary
	2,  // 9: redsail.bosn.Deployment.Create:input_type -> redsail.bosn.CreateDeployment
	4,  // 10: redsail.bosn.Deployment.Update:input_type -> redsail.bosn.UpdateDeployment
	6,  // 11: redsail.bosn.Deployment.Destroy:input_type -> redsail.bosn.DestroyDeployment
	8,  // 12: redsail.bosn.Deployment.Read:input_type -> redsail.bosn.ReadDeployment
	10, // 13: redsail.bosn.Deployment.All:input_type -> redsail.bosn.ReadDeployments
	13, // 14: redsail.bosn.Deployment.Template:input_type -> redsail.bosn.TemplateDeployment
	15, // 15: redsail.bosn.Deployment.Token:input_type -> redsail.bosn.ReadToken
	17, // 16: redsail.bosn.Deployment.Run:input_type -> redsail.bosn.ReadRun
	22, // 17: redsail.bosn.Deployment.Runs:input_type -> redsail.bosn.ReadRuns
	3,  // 18: redsail.bosn.Deployment.Create:output_type -> redsail.bosn.DeploymentCreated
	5,  // 19: redsail.bosn.Deployment.Update:output_type -> redsail.bosn.DeploymentUpdated
	7,  // 20: redsail.bosn.Deployment.Destroy:output_type -> redsail.bosn.DeploymentDestroyed
	9,  // 21: redsail.bosn.Deployment.Read:output_type -> redsail.bosn.DeploymentRead
	12, // 22: redsail.bosn.Deployment.All:output_type -> redsail.bosn.DeploymentsRead
	14, // 23: redsail.bosn.Deployment.Template:output_type -> redsail.bosn.DeploymentTemplated
	16, // 24: redsail.bosn.Deployment.Token:output_type -> redsail.bosn.TokenRead
	21, // 25: redsail.bosn.Deployment.Run:output_type -> redsail.bosn.RunRead
	24, // 26: redsail.bosn.Deployment.Runs:output_type -> redsail.bosn.RunsRead
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_deployment_proto_init() }
func file_deployment_proto_init() {
	if File_deployment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_deployment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentDestroyed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDeployments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentReadSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentsRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentTemplated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StepLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StepRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRuns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunReadSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunsRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deployment_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_deployment_proto_goTypes,
		DependencyIndexes: file_deployment_proto_depIdxs,
		EnumInfos:         file_deployment_proto_enumTypes,
		MessageInfos:      file_deployment_proto_msgTypes,
	}.Build()
	File_deployment_proto = out.File
	file_deployment_proto_rawDesc = nil
	file_deployment_proto_goTypes = nil
	file_deployment_proto_depIdxs = nil
}
